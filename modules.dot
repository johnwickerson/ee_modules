// This is an auto-generated file. Don't edit this file; edit `modules.yml` instead.

digraph {
  node[shape=record, style="filled"];
  node[color="#99d8c9", fillcolor="#e5f5f9"];
  ELEC40002 [label="{ELEC40002 | Analysis and Design of Circuits | {
    <1>Explain the basic\nphysics underlying\nthe operation of the\nfollowing electronic\ncomponents:\nresistor, capacitor,\ninductor, diode,\ntransistor |
    <2>Perform DC analysis\nof circuits\ncontaining\ncombinations of the\nabove components to\nestablish the nodal\nvoltages and branch\ncurrents |
    <3>Perform AC analysis\nof circuits\ncontaining\ncombinations of the\nabove components,\nusing small-signal\nequivalent models to\nlinearise any\nnon-linear elements |
    <4>Apply the operation\nof simple transistor\nlevel circuits\nincluding amplifier\nstages and logic\ngates |
    <5>Analyse basic opamp\ncircuits containing\nidealised opamps and\npassive components |
    <6>Apply the concept\nof a transfer\nfunction and derive\nthe transfer\nfunctions for a\nrange of standard\nfilter circuits |
    <7>Analyse the\ntransient behaviour\nof 1st order RC and\nRL networks |
    <8>Use SPICE to\nsimulate the\nbehaviour of the\ncircuits you have\nstudied |
    <9>Appreciate where\nand how the circuits\nyou have studied are\napplied in real\nengineering\napplications
  }}"];

  ELEC40003 [label="{ELEC40003 | Digital Electronics and Computer Architecture | {
    <1>design significant\nsynchronous\nsequential digital\ncircuits using\nregisters and\ncombinational logic |
    <2>design simple\ntwoâ€™s complement\naddition and\nsubtraction digital\ncircuits, with\ncorrect use of carry\nand overflow |
    <3>use digital blocks:\nRAMs, ROMs,\nregisters, adders,\nmultiplexers and\nstate machines to\ndesign and analyse\nthe operation of\nsimple pipelined\nRISC computer\nsystems |
    <4>model the operation\nof machine code\ninstructions on a\nCPU at\nregister-transfer\nlevel, and\nmanipulate data\nusing different\nnumeric\nrepresentations |
    <5>write programs for\narithmetic\noperations,\nmanipulating bit\nfields within words,\naccessing memory,\nand calling\nsubroutines |
    <6>implement I/O in\nembedded computer\nsystems using\npolling
  }}"];
}
